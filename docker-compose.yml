version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15
    container_name: chess_postgres
    environment:
      POSTGRES_DB: chess_db
      POSTGRES_USER: chess_user
      POSTGRES_PASSWORD: chess_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/schema.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - chess_network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: chess_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chess_network

  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: chess_backend
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DATABASE_URL=jdbc:postgresql://postgres:5432/chess_db
      - DATABASE_USERNAME=chess_user
      - DATABASE_PASSWORD=chess_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    networks:
      - chess_network
    volumes:
      - ./shared:/app/shared:ro

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chess_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8080
      - REACT_APP_SOCKET_URL=http://localhost:8080
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - chess_network
    volumes:
      - ./shared:/app/shared:ro

  # Nginx 反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: chess_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - chess_network

volumes:
  postgres_data:
  redis_data:

networks:
  chess_network:
    driver: bridge
